// Generated by CoffeeScript 1.7.1
var Module, moduleKeywords,
  __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

moduleKeywords = ['included', 'extended'];

module.exports = Module = (function() {
  Module.extend = function(obj) {
    var name, value, _ref;
    if (!obj) {
      throw new Error('extend require obj as arguemnt');
    }
    for (name in obj) {
      value = obj[name];
      if (__indexOf.call(moduleKeywords, name) < 0) {
        this[name] = value;
      }
    }
    if (((_ref = obj.extended) != null ? _ref.call : void 0) != null) {
      obj.extended.call(this);
    }
    return this;
  };

  Module.include = function(obj) {
    var name, value, _ref;
    if (!obj) {
      throw new Error('include require obj as argument');
    }
    for (name in obj) {
      value = obj[name];
      if (!(__indexOf.call(moduleKeywords, name) < 0)) {
        continue;
      }
      this.prototype[name] = value;
      if (((_ref = obj.included) != null ? _ref.call : void 0) != null) {
        obj.included.call(this);
      }
    }
    return this;
  };

  Module.proxy = function(func) {
    return (function(_this) {
      return function() {
        return func.apply(_this, arguments);
      };
    })(this);
  };

  Module.prototype.proxy = function(func) {
    return (function(_this) {
      return function() {
        return func.apply(_this, arguments);
      };
    })(this);
  };

  function Module() {
    if (typeof this.initialize === "function") {
      this.initialize.apply(this, arguments);
    }
  }

  return Module;

})();
